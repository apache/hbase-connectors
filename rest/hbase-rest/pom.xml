<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <!--
    /**
     * Licensed to the Apache Software Foundation (ASF) under one
     * or more contributor license agreements.  See the NOTICE file
     * distributed with this work for additional information
     * regarding copyright ownership.  The ASF licenses this file
     * to you under the Apache License, Version 2.0 (the
     * "License"); you may not use this file except in compliance
     * with the License.  You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    -->

    <parent>
        <groupId>org.apache.hbase.connectors</groupId>
        <artifactId>rest</artifactId>
        <version>${revision}</version>
        <relativePath>../</relativePath>
    </parent>

    <groupId>org.apache.hbase.connectors.rest</groupId>
    <artifactId>hbase-rest</artifactId>
    <name>Apache HBase - Rest Server</name>
    <description>HBase Rest Server</description>

    <properties>
        <surefire.provider>surefire-junit47</surefire.provider>
    </properties>



    <build>
        <!-- Makes sure the resources get added before they are processed
          by placing this first -->
        <resources>
            <!-- Add the build webabpps to the classpth -->
            <resource>
                <directory>${project.build.directory}</directory>
                <includes>
                    <include>hbase-webapps/**</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>../hbase-rest/src/test/resources</directory>
                <includes>
                    <include>**/**</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <!--Make it so assembly:single does nothing in here-->
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <skipAssembly>true</skipAssembly>
                </configuration>
            </plugin>
            <!-- Make a jar and put the sources in the jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>%regex[.*(Cat|Dog).*Test.*]</include>
                    </includes>
                </configuration>
            </plugin>
            <!-- General ant tasks, bound to different build phases -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- Generate web app sources -->
                    <execution>
                        <id>generate</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <property name="build.webapps" location="${project.build.directory}/hbase-webapps"/>
                                <property name="src.webapps" location="${basedir}/src/main/resources/hbase-webapps"/>
                                <property name="generated.sources" location="${project.build.directory}/generated-sources"/>
                                <copy todir="${build.webapps}">
                                    <fileset dir="${src.webapps}">
                                        <exclude name="**/*.jsp"/>
                                        <exclude name="**/.*"/>
                                        <exclude name="**/*~"/>
                                    </fileset>
                                </copy>
                                <!--The compile.classpath is passed in by maven -->
                                <taskdef classname="org.apache.jasper.JspC" name="jspcompiler" classpathref="maven.compile.classpath"/>
                                <mkdir dir="${build.webapps}/rest/WEB-INF"/>
                                <jspcompiler uriroot="${src.webapps}/rest" outputdir="${generated.sources}/java" package="org.apache.hadoop.hbase.generated.rest" webxml="${build.webapps}/rest/WEB-INF/web.xml"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <!-- Add the generated sources -->
                    <execution>
                        <id>jspcSource-packageInfo-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Testing plugins -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <test.build.webapps>../target/test-classes/webapps</test.build.webapps>
                    </systemPropertyVariables>
                </configuration>
                <dependencies>
                    <!-- by default surefire selects dynamically the connector to the unit tests
                      tool. We want to use always the same as the different connectors can have different
                      bugs and behaviour. -->
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>${surefire.provider}</artifactId>
                        <version>${surefire.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>net.revelc.code</groupId>
                <artifactId>warbucks-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.apache.hbase.connectors.rest</groupId>
            <artifactId>hbase-rest-protocol</artifactId>
        </dependency>
        <!--This one is upfront to get in front of
             any dependency that pulls in jersey-core.
             Jersey-core has implemented version 1
             Interfaces of what is in this dependency
             which does version 2.-->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <!-- Intra-project dependencies -->
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-mapreduce</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-hadoop-compat</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-testing-util</artifactId>
            <scope>test</scope>
            <exclusions>
                <!--This dependency pulls in hadoop-minicluster
                     which pulls in the below. It messes up
                this build at assembly time. See HBASE-22029 -->
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- REST dependencies -->
        <dependency>
            <groupId>org.apache.hbase.thirdparty</groupId>
            <artifactId>hbase-shaded-miscellaneous</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase.thirdparty</groupId>
            <artifactId>hbase-shaded-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>javax.activation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <!-- We *might* need this for XMLStreamReader use in RemoteAdmin
                 TODO figure out if we can remove it.
              -->
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>stax</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!--For JspC used in ant task-->
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.servlet.jsp</artifactId>
        </dependency>
        <!-- Specifically needed for jetty-jsp, included
             to bypass version scanning that hits a bad repo
             see HBASE-18831 -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kerby</groupId>
            <artifactId>kerb-simplekdc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-minikdc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kerby</groupId>
            <artifactId>kerb-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.findbugs</groupId>
            <artifactId>findbugs-annotations</artifactId>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>
        <!--Test-->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <profiles>
        <!-- Skip the tests in this module -->
        <profile>
            <id>skipRestTests</id>
            <activation>
                <property>
                    <name>skipRestTests</name>
                </property>
            </activation>
            <properties>
                <surefire.skipFirstPart>true</surefire.skipFirstPart>
                <surefire.skipSecondPart>true</surefire.skipSecondPart>
            </properties>
        </profile>

        <!-- Hadoop-specific dependencies -->
        <profile>
            <id>hadoop-3.0</id>
            <activation>
                <property><name>!hadoop.profile</name></property>
            </activation>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-server-nodemanager</artifactId>
                        <exclusions>
                            <exclusion>
                                <groupId>com.sun.jersey</groupId>
                                <artifactId>jersey-core</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-server-resourcemanager</artifactId>
                        <exclusions>
                            <exclusion>
                                <groupId>com.sun.jersey</groupId>
                                <artifactId>jersey-core</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-server-timelineservice</artifactId>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.ws.rs</groupId>
                                <artifactId>jsr311-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-common</artifactId>
                        <exclusions>
                            <exclusion>
                                <groupId>com.sun.jersey</groupId>
                                <artifactId>jersey-core</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-annotations</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-auth</artifactId>
                </dependency>
                <!--Needed when jdk11/hadoop3 else complaint about
                  NoSuchMethodError: 'java.util.Map javax.ws.rs.core.Application.getProperties()'
                  when REST server is started.
                  -->
                <dependency>
                    <groupId>org.glassfish.jaxb</groupId>
                    <artifactId>jaxb-runtime</artifactId>
                    <version>2.3.2</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>eclipse-specific</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>

                        <!--This plugin's configuration is used to store Eclipse m2e settings
                             only. It has no influence on the Maven build itself.-->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-antrun-plugin</artifactId>
                                                <versionRange>[1.6,)</versionRange>
                                                <goals>
                                                    <goal>run</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>